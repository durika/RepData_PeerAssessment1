if(!file.exists(fullFile)) stop(paste("File",fullFile,"not found!!!"))
myTable <- fread(fullFile)
vCompl <- myTable[complete.cases(myTable)]
myVec <- c(myVec, cor(myTable[vCompl]$nitrate, myTable[vCompl]$sulfate))
#Add a line
#myData[i,"id"] <- x
#myData[i,"nobs"] <- sum(complete.cases(myTable)==TRUE)
#i <- i+1
}
myVec
myTable
}
corr <- function(directory, threshold = 0) {
#Load package if not yet loaded and initialize
require(data.table)
i <- 1
#Get ID vector
myData <- complete(directory)
id <- myData[myData$nobs > threshold,"id"]
id <- c(1:2)
#return vector
myVec <- c()
#Loop through files
for (x in id){
#Construct the filename
myFile <- x
if (x < 100) myFile <- paste("0",myFile,sep="")
if (x < 10) myFile <- paste("0",myFile,sep="")
fullFile <- paste(directory,"/",myFile,".csv",sep="")
#Check the file and load to temporary table
if(!file.exists(fullFile)) stop(paste("File",fullFile,"not found!!!"))
myTable <- fread(fullFile)
vCompl <- myTable[complete.cases(myTable)]
myVec <- c(myVec, cor(myTable[vCompl]$nitrate, myTable[vCompl]$sulfate))
#Add a line
#myData[i,"id"] <- x
#myData[i,"nobs"] <- sum(complete.cases(myTable)==TRUE)
#i <- i+1
}
myVec
#myTable
}
myData[complete.cases(myData)]$sulfate
myData <- corr("specdata", 400)
corr <- function(directory, threshold = 0) {
#Load package if not yet loaded and initialize
require(data.table)
i <- 1
#Get ID vector
myData <- complete(directory)
id <- myData[myData$nobs > threshold,"id"]
id <- c(1:2)
#return vector
myVec <- c()
#Loop through files
for (x in id){
#Construct the filename
myFile <- x
if (x < 100) myFile <- paste("0",myFile,sep="")
if (x < 10) myFile <- paste("0",myFile,sep="")
fullFile <- paste(directory,"/",myFile,".csv",sep="")
#Check the file and load to temporary table
if(!file.exists(fullFile)) stop(paste("File",fullFile,"not found!!!"))
myTable <- fread(fullFile)
vCompl <- myTable[complete.cases(myTable)]
#  myVec <- c(myVec, cor(myTable[vCompl]$nitrate, myTable[vCompl]$sulfate))
#Add a line
#myData[i,"id"] <- x
#myData[i,"nobs"] <- sum(complete.cases(myTable)==TRUE)
#i <- i+1
}
myVec
myTable
}
myData <- corr("specdata", 400)
myTable <- myData
vCompl <- myTable[complete.cases(myTable)]
c(myVec, cor(myTable[vCompl]$nitrate, myTable[vCompl]$sulfate))
cor(myTable[vCompl]$nitrate, myTable[vCompl]$sulfate)
myTable[vCompl]$sulfate
myTable[vCompl]$nitrate
myTable[vCompl]
myTable[complete.cases(myTable)]$nitrate
complete.cases(myTable)
myData <- corr("specdata", 400)
myVec
corr <- function(directory, threshold = 0) {
#Load package if not yet loaded and initialize
require(data.table)
i <- 1
#Get ID vector
myData <- complete(directory)
id <- myData[myData$nobs > threshold,"id"]
id <- c(1:2)
#return vector
myVec <- c()
#Loop through files
for (x in id){
#Construct the filename
myFile <- x
if (x < 100) myFile <- paste("0",myFile,sep="")
if (x < 10) myFile <- paste("0",myFile,sep="")
fullFile <- paste(directory,"/",myFile,".csv",sep="")
#Check the file and load to temporary table
if(!file.exists(fullFile)) stop(paste("File",fullFile,"not found!!!"))
myTable <- fread(fullFile)
vCompl <- complete.cases(myTable)
myVec <- c(myVec, cor(myTable[vCompl]$nitrate, myTable[vCompl]$sulfate))
#Add a line
#myData[i,"id"] <- x
#myData[i,"nobs"] <- sum(complete.cases(myTable)==TRUE)
#i <- i+1
}
myVec
#myTable
}
corr <- function(directory, threshold = 0) {
#Load package if not yet loaded and initialize
require(data.table)
i <- 1
#Get ID vector
myData <- complete(directory)
id <- myData[myData$nobs > threshold,"id"]
id <- c(1:2)
#return vector
myVec <- c()
#Loop through files
for (x in id){
#Construct the filename
myFile <- x
if (x < 100) myFile <- paste("0",myFile,sep="")
if (x < 10) myFile <- paste("0",myFile,sep="")
fullFile <- paste(directory,"/",myFile,".csv",sep="")
#Check the file and load to temporary table
if(!file.exists(fullFile)) stop(paste("File",fullFile,"not found!!!"))
myTable <- fread(fullFile)
vCompl <- complete.cases(myTable)
print(cor(myTable[vCompl]$nitrate, myTable[vCompl]$sulfate))
myVec <- c(myVec, cor(myTable[vCompl]$nitrate, myTable[vCompl]$sulfate))
#Add a line
#myData[i,"id"] <- x
#myData[i,"nobs"] <- sum(complete.cases(myTable)==TRUE)
#i <- i+1
}
myVec
#myTable
}
myData <- corr("specdata", 400)
myVec
myData <- corr("specdata", 400)
myVec
myData <- corr("specdata", 400)
myVec
myData <- corr("specdata", 400)
myVec
myData <- corr("specdata", 400)
myData <- corr("specdata", 400)
corr <- function(directory, threshold = 0) {
#Load package if not yet loaded and initialize
require(data.table)
i <- 1
#Get ID vector
myData <- complete(directory)
id <- myData[myData$nobs > threshold,"id"]
id <- c(1:2)
#return vector
myVec <- c("")
#Loop through files
for (x in id){
#Construct the filename
myFile <- x
if (x < 100) myFile <- paste("0",myFile,sep="")
if (x < 10) myFile <- paste("0",myFile,sep="")
fullFile <- paste(directory,"/",myFile,".csv",sep="")
#Check the file and load to temporary table
if(!file.exists(fullFile)) stop(paste("File",fullFile,"not found!!!"))
myTable <- fread(fullFile)
vCompl <- complete.cases(myTable)
print(cor(myTable[vCompl]$nitrate, myTable[vCompl]$sulfate))
myVec <- c(myVec, cor(myTable[vCompl]$nitrate, myTable[vCompl]$sulfate))
myVec <- "a"
print(myVec)
#Add a line
#myData[i,"id"] <- x
#myData[i,"nobs"] <- sum(complete.cases(myTable)==TRUE)
#i <- i+1
}
myVec <- "a"
print(myVec)
}
myData <- corr("specdata", 400)
corr <- function(directory, threshold = 0) {
#Load package if not yet loaded and initialize
require(data.table)
i <- 1
#Get ID vector
myData <- complete(directory)
id <- myData[myData$nobs > threshold,"id"]
id <- c(1:2)
#return vector
myVec <- c("")
#Loop through files
for (x in id){
#Construct the filename
myFile <- x
if (x < 100) myFile <- paste("0",myFile,sep="")
if (x < 10) myFile <- paste("0",myFile,sep="")
fullFile <- paste(directory,"/",myFile,".csv",sep="")
#Check the file and load to temporary table
if(!file.exists(fullFile)) stop(paste("File",fullFile,"not found!!!"))
myTable <- fread(fullFile)
vCompl <- complete.cases(myTable)
# print(cor(myTable[vCompl]$nitrate, myTable[vCompl]$sulfate))
myVec <- c(myVec, cor(myTable[vCompl]$nitrate, myTable[vCompl]$sulfate))
#  myVec <- "a"
#  print(myVec
#Add a line
#myData[i,"id"] <- x
#myData[i,"nobs"] <- sum(complete.cases(myTable)==TRUE)
#i <- i+1
}
print(myVec)
}
myData <- corr("specdata", 400)
myVec
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0) {
#Load package if not yet loaded and initialize
require(data.table)
i <- 1
#Get ID vector
myData <- complete(directory)
id <- myData[myData$nobs > threshold,"id"]
#return vector
myVec <- c()
#Loop through files
for (x in id){
#Construct the filename
myFile <- x
if (x < 100) myFile <- paste("0",myFile,sep="")
if (x < 10) myFile <- paste("0",myFile,sep="")
fullFile <- paste(directory,"/",myFile,".csv",sep="")
#Check the file and load to temporary table
if(!file.exists(fullFile)) stop(paste("File",fullFile,"not found!!!"))
myTable <- fread(fullFile)
vCompl <- complete.cases(myTable)
myVec <- c(myVec, cor(myTable[vCompl]$nitrate, myTable[vCompl]$sulfate))
#Add a line
#myData[i,"id"] <- x
#myData[i,"nobs"] <- sum(complete.cases(myTable)==TRUE)
#i <- i+1
}
print(myVec)
}
cr <- corr("specdata", 150)
summary(cr)
cr <- corr("specdata", 400)
summary(cr)
cr <- corr("specdata")
summary(cr)
summary(cr)
summary(cr)
summary(cr)
corr <- function(directory, threshold = 0) {
#Load package if not yet loaded and initialize
require(data.table)
i <- 1
#Get ID vector
myData <- complete(directory)
id <- myData[myData$nobs > threshold,"id"]
#return vector
myVec <- c()
#Loop through files
for (x in id){
#Construct the filename
myFile <- x
if (x < 100) myFile <- paste("0",myFile,sep="")
if (x < 10) myFile <- paste("0",myFile,sep="")
fullFile <- paste(directory,"/",myFile,".csv",sep="")
#Check the file and load to temporary table
if(!file.exists(fullFile)) stop(paste("File",fullFile,"not found!!!"))
myTable <- fread(fullFile)
#Add cor for complete cases only
vCompl <- complete.cases(myTable)
myVec <- c(myVec, cor(myTable$nitrate, myTable$sulfate))
}
print(myVec)
}
cr <- corr("specdata")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
2
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
pollutantmean <- function(directory, pollutant, id = 1:332) {
#Load package if not yet loaded and initialize
require(data.table)
myData <- data.frame(matrix(NA,0,2))
names(myData) <- c("mean","count")
i <- 1
#Loop through files
for (x in id){
#Construct the filename
myFile <- x
if (x < 100) myFile <- paste("0",myFile,sep="")
if (x < 10) myFile <- paste("0",myFile,sep="")
fullFile <- paste(directory,"/",myFile,".csv",sep="")
#Check the file and load to temporary table
if(!file.exists(fullFile)) stop(paste("File",fullFile,"not found!!!"))
myTable <- fread(fullFile)
#Add a line
myData[i,"mean"] <- myTable[, mean(na.omit(myTable[[pollutant]])), ]
myData[i,"count"] <- myTable[, length(na.omit(myTable[[pollutant]])), ]
i <- i+1
}
#Print result
print(sum(myData$count * myData$mean)/sum(myData$count))
}
pollutantmean("specdata", "nitrate")
pollutantmean("specdata", "sulfate")
pollutantmean <- function(directory, pollutant, id = 1:332) {
#Load package if not yet loaded and initialize
require(data.table)
myData <- data.frame(matrix(NA,0,2))
names(myData) <- c("mean","count")
i <- 1
#Loop through files
for (x in id){
#Construct the filename
myFile <- x
if (x < 100) myFile <- paste("0",myFile,sep="")
if (x < 10) myFile <- paste("0",myFile,sep="")
fullFile <- paste(directory,"/",myFile,".csv",sep="")
#Check the file and load to temporary table
if(!file.exists(fullFile)) stop(paste("File",fullFile,"not found!!!"))
myTable <- fread(fullFile)
#Add a line
myData[i,"mean"] <- myTable[, mean(na.omit(myTable[[pollutant]])), ]
myData[i,"count"] <- myTable[, length(na.omit(myTable[[pollutant]])), ]
i <- i+1
}
#Print result
print(sum(myData$count * myData$mean, na.rm=TRUE)/sum(myData$count, na.rm=TRUE))
}
pollutantmean("specdata", "sulfate")
pollutantmean("specdata", "nitrate")
pollutantmean <- function(directory, pollutant, id = 1:332) {
#Load package if not yet loaded and initialize
require(data.table)
myData <- data.frame(matrix(NA,0,2))
names(myData) <- c("mean","count")
i <- 1
#Loop through files
for (x in id){
#Construct the filename
myFile <- x
if (x < 100) myFile <- paste("0",myFile,sep="")
if (x < 10) myFile <- paste("0",myFile,sep="")
fullFile <- paste(directory,"/",myFile,".csv",sep="")
#Check the file and load to temporary table
if(!file.exists(fullFile)) stop(paste("File",fullFile,"not found!!!"))
myTable <- fread(fullFile)
#Add a line
myData[i,"mean"] <- myTable[, mean(na.omit(myTable[[pollutant]])), ]
myData[i,"count"] <- myTable[, length(na.omit(myTable[[pollutant]])), ]
i <- i+1
}
#Print result
print(sum(myData$count * myData$mean)/sum(myData$count))
}
pollutantmean("specdata", "nitrate")
pollutantmean <- function(directory, pollutant, id = 1:332) {
#Load package if not yet loaded and initialize
require(data.table)
myData <- data.frame(matrix(NA,0,2))
names(myData) <- c("mean","count")
i <- 1
#Loop through files
for (x in id){
#Construct the filename
myFile <- x
if (x < 100) myFile <- paste("0",myFile,sep="")
if (x < 10) myFile <- paste("0",myFile,sep="")
fullFile <- paste(directory,"/",myFile,".csv",sep="")
#Check the file and load to temporary table
if(!file.exists(fullFile)) stop(paste("File",fullFile,"not found!!!"))
myTable <- fread(fullFile)
#Add a line
myData[i,"mean"] <- myTable[, mean(na.omit(myTable[[pollutant]])), ]
myData[i,"count"] <- myTable[, length(na.omit(myTable[[pollutant]])), ]
i <- i+1
}
#Print result
print(sum(myData$count * myData$mean, na.rm=TRUE)/sum(myData$count, na.rm=TRUE))
}
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
setwd("c:\Users\durika\Documents\Git\RepData_PeerAssessment1\")
setwd("c:\Users\durika\Documents\Git\RepData_PeerAssessment1\")
setwd("c:\Users\durika\Documents\Git\RepData_PeerAssessment1\")
setwd("..\")
CC/
\
\\\
""
'
'
)
]
)))
"
setwd("c:/Users/durika/Documents/Git/RepData_PeerAssessment1/")
getwd()
setwd("~")
getwd()
setwd("~/Git/RepData_PeerAssessment1/")
getwd()
install.packages("knitr")
help(zip)
help(unz)
unz("activity.zip")
unz("activity.zip", "activity.zip")
unz("", "activity.zip")
unz("file", "activity.zip")
unz("zipfile", "activity.zip")
read.csv(unz("zipfile", "activity.zip"))
read.csv2(unz("zipfile", "activity.zip"))
read.csv2(unz("activity.zip", "activity.zip"))
read.csv2(unz("activity.csv", "activity.zip"))
read.csv(unz("activity.csv", "activity.zip"))
(unz("activity.csv", "activity.zip")
)
dir()
read.csv(unz("activity.csv", "activity.zip"))
unz("activity.csv", "activity.zip")
read.csv(unz("", "activity.zip"))
read.csv(unz("./", "activity.zip"))
read.csv(unz("./activity.zip", "activity.zip"))
read.csv(unz("./activity.zip", "activity.a"))
read.csv(unz("./activity.zip", "activity.csv"))
read.csv(unz("./activity.zip", "activity.csv"))
myData <- read.csv(unz("./activity.zip", "activity.csv"))
summary(myData)
summary(myData)
str(myDatap[1])
str(myData[1])
str(myData[[1]])
str(myData[[2]])
str(myData[[3]])
help(qplot)
qplot(myData$steps, data=myData)
qplot(myData$steps, data=myData, binwidth=10)
qplot(myData$steps, data=myData, binwidth=1)
qplot(myData$steps, data=myData, binwidth=100)
qplot(myData$steps, data=myData, binwidth=1)
qplot(myData[!is.na(myData$steps)]$steps, data=myData, binwidth=1)
myData[!is.na(myData$steps)]$steps
myData[!is.na(myData$steps),]$steps
qplot(myData[!is.na(myData$steps),]$steps, data=myData, binwidth=1)
qplot(myData[!is.na(myData$steps),]$steps, data=myData[!is.na(myData$steps),], binwidth=1)
qplot(myData[!is.na(myData$steps),]$steps, data=myData[!is.na(myData$steps),], binwidth=1, ylim=100)
qplot(myData[!is.na(myData$steps),]$steps, data=myData[!is.na(myData$steps),], binwidth=1, ylim=10)
qplot(myData[!is.na(myData$steps),]$steps, data=myData[!is.na(myData$steps),], binwidth=1)
qplot(myData[!is.na(myData$steps),]$steps, data=myData[!is.na(myData$steps),], binwidth=1, ylim=c(0,1))
qplot(myData[!is.na(myData$steps),]$steps, data=myData[!is.na(myData$steps),], binwidth=1, ylim=c(0,500))
qplot(myData[!is.na(myData$steps),]$steps, data=myData[!is.na(myData$steps),], binwidth=1, ylim=c(0,5))
qplot(myData[!is.na(myData$steps),]$steps, data=myData[!is.na(myData$steps),], binwidth=1, ylim=c(0,5000))
qplot(myData[!is.na(myData$steps),]$steps, data=myData[!is.na(myData$steps),], binwidth=1, ylim=c(0,300))
qplot(myData[!is.na(myData$steps),]$steps, data=myData[!is.na(myData$steps),], binwidth=10, ylim=c(0,300))
qplot(myData[!is.na(myData$steps),]$steps, data=myData[!is.na(myData$steps),], binwidth=10, ylim=c(0,600))
qplot(myData[!is.na(myData$steps),]$steps, data=myData[!is.na(myData$steps),], binwidth=10, ylim=c(0,800))
qplot(myData[!is.na(myData$steps),]$steps, data=myData[!is.na(myData$steps),], binwidth=10, ylim=c(0,500000))
qplot(myData[!is.na(myData$steps),]$steps, data=myData[!is.na(myData$steps),], binwidth=10, ylim=c(0,50000))
qplot(myData[!is.na(myData$steps),]$steps, data=myData[!is.na(myData$steps),], binwidth=10, ylim=c(0,5000))
qplot(myData[!is.na(myData$steps),]$steps, data=myData[!is.na(myData$steps),], binwidth=10, ylim=c(0,1000))
qplot(myData$steps, data=myData, binwidth=1)
qplot(myData$steps, data=myData, , binwidth=10, ylim=c(0,1000))
qplot(myData$steps, data=myData, binwidth=10, ylim=c(0,1000))
qplot(myData$steps, data=myData, binwidth=10, ylim=c(0,7000))
qplot(myData$steps, data=myData, binwidth=10, ylim=c(0,700))
qplot(myData$steps, data=myData, binwidth=10, ylim=c(0,650))
qplot(myData$steps, data=myData, binwidth=10, ylim=c(0,5000))
qplot(myData$steps, data=myData, binwidth=10, ylim=c(0,50005))
qplot(myData$steps, data=myData, binwidth=10, ylim=c(0,15000))
qplot(myData$steps, data=myData, binwidth=10, ylim=c(0,15000))
m <- ggplot(myData, aes(x=myData$steps))
m + geom_histogram()
m + geom_histogram(aes(y = ..density..)) + geom_density()
m <- ggplot(myData, aes(x=myData$steps))
m + geom_histogram()
m <- ggplot(myData, aes(x=myData$steps), binwidth=10)
m + geom_histogram()
m + geom_histogram(binwidth=10)
m + geom_histogram(binwidth=30)
m + geom_histogram(binwidth=20)
m + geom_histogram(binwidth=10)
m + geom_histogram(binwidth=5)
m + geom_histogram(binwidth=1)
m + geom_histogram(binwidth=0)
m + geom_histogram(binwidth=50)
m + geom_histogram(binwidth=20)
myHist <- ggplot(myData, aes(x=myData$steps), binwidth=10)
myHist + geom_histogram(binwidth=20)
